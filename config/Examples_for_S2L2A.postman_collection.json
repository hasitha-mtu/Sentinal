{
	"info": {
		"_postman_id": "4baec6ee-dd86-42fc-aa81-ed5a452a9b04",
		"name": "Examples for S2L2A",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "True Color",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "request",
							"value": "{\n    \"input\": {\n        \"bounds\": {\n            \"properties\": {\n                \"crs\": \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\"\n            },\n            \"bbox\": [\n                13.822174072265625,\n                45.85080395917834,\n                14.55963134765625,\n                46.29191774991382\n            ]\n        },\n        \"data\": [\n            {\n                \"type\": \"sentinel-2-l2a\",\n                \"dataFilter\": {\n                    \"timeRange\": {\n                        \"from\": \"2018-10-01T00:00:00Z\",\n                        \"to\": \"2018-12-31T00:00:00Z\"\n                    }\n                }\n            }\n        ]\n    },\n    \"output\": {\n        \"width\": 512,\n        \"height\": 512\n    }\n}",
							"type": "text"
						},
						{
							"key": "evalscript",
							"value": "//VERSION=3\n\nfunction setup() {\n  return {\n    input: [\"B02\", \"B03\", \"B04\"],\n    output: { bands: 3 }\n  }\n}\n\nfunction evaluatePixel(sample) {\n  return [2.5 * sample.B04, 2.5 * sample.B03, 2.5 * sample.B02]\n}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://services.sentinel-hub.com/api/v1/process",
					"protocol": "https",
					"host": [
						"services",
						"sentinel-hub",
						"com"
					],
					"path": [
						"api",
						"v1",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "True Color (EPSG 32633)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "request",
							"value": "{\n    \"input\": {\n        \"bounds\": {\n            \"properties\": {\n                \"crs\": \"http://www.opengis.net/def/crs/EPSG/0/32633\"\n            },\n            \"bbox\": [\n                408553.58,\n                5078145.48,\n                466081.02,\n                5126576.61\n            ]\n        },\n        \"data\": [\n            {\n                \"type\": \"sentinel-2-l2a\",\n                \"dataFilter\": {\n                    \"timeRange\": {\n                        \"from\": \"2018-10-01T00:00:00Z\",\n                        \"to\": \"2018-12-31T00:00:00Z\"\n                    }\n                }\n            }\n        ]\n    },\n    \"output\": {\n        \"width\": 512,\n        \"height\": 512\n    }\n}",
							"type": "text"
						},
						{
							"key": "evalscript",
							"value": "//VERSION=3\n\nfunction setup() {\n  return {\n    input: [\"B02\", \"B03\", \"B04\"],\n    output: { bands: 3 }\n  }\n}\n\nfunction evaluatePixel(sample) {\n  return [2.5 * sample.B04, 2.5 * sample.B03, 2.5 * sample.B02]\n}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://services.sentinel-hub.com/api/v1/process",
					"protocol": "https",
					"host": [
						"services",
						"sentinel-hub",
						"com"
					],
					"path": [
						"api",
						"v1",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "True Color, resolution (EPSG 32633)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer <your access token>",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "request",
							"value": "{\n    \"input\": {\n        \"bounds\": {\n            \"properties\": {\n                \"crs\": \"http://www.opengis.net/def/crs/EPSG/0/32633\"\n            },\n            \"bbox\": [\n                408553.58,\n                5078145.48,\n                466081.02,\n                5126576.61\n            ]\n        },\n        \"data\": [\n            {\n                \"type\": \"sentinel-2-l1c\",\n                \"dataFilter\": {\n                    \"timeRange\": {\n                        \"from\": \"2018-10-01T00:00:00Z\",\n                        \"to\": \"2018-12-31T00:00:00Z\"\n                    }\n                }\n            }\n        ]\n    },\n    \"output\": {\n        \"resx\": 100,\n        \"resy\": 100\n    }\n}",
							"type": "text"
						},
						{
							"key": "evalscript",
							"value": "//VERSION=3\n\nfunction setup() {\n  return {\n    input: [\"B02\", \"B03\", \"B04\"],\n    output: { bands: 3 }\n  }\n}\n\nfunction evaluatePixel(sample) {\n  return [2.5 * sample.B04, 2.5 * sample.B03, 2.5 * sample.B02]\n}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://services.sentinel-hub.com/api/v1/process",
					"protocol": "https",
					"host": [
						"services",
						"sentinel-hub",
						"com"
					],
					"path": [
						"api",
						"v1",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "True Color, multi-band GeoTIff",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "image/tiff"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "request",
							"value": "{\n        \"input\": {\n                \"bounds\": {\n                        \"properties\": {\n                                \"crs\": \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\"\n                        },\n                        \"bbox\": [\n                                13.822174072265625,\n                                45.85080395917834,\n                                14.55963134765625,\n                                46.29191774991382\n                        ]\n                },\n                \"data\": [\n                        {\n                                \"type\": \"sentinel-2-l2a\",\n                                \"dataFilter\": {\n                                        \"timeRange\": {\n                                                \"from\": \"2018-10-01T00:00:00Z\",\n                                                \"to\": \"2018-12-31T00:00:00Z\"\n                                        }\n                                }\n                        }\n                ]\n        },\n        \"output\": {\n                \"width\": 512,\n                \"height\": 512\n        }\n}",
							"type": "text"
						},
						{
							"key": "evalscript",
							"value": "//VERSION=3\n\nfunction setup() {\n  return {\n    input: [\"B02\", \"B03\", \"B04\"],\n    output: { bands: 3 }\n  }\n}\n\nfunction evaluatePixel(sample) {\n  return [2.5 * sample.B04, 2.5 * sample.B03, 2.5 * sample.B02]\n}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://services.sentinel-hub.com/api/v1/process",
					"protocol": "https",
					"host": [
						"services",
						"sentinel-hub",
						"com"
					],
					"path": [
						"api",
						"v1",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "True Color, cloudy pixels masked out",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "request",
							"value": "{\n    \"input\": {\n        \"bounds\": {\n            \"properties\": {\n                \"crs\": \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\"\n            },\n            \"bbox\": [\n                13.822174072265625,\n                45.85080395917834,\n                14.55963134765625,\n                46.29191774991382\n            ]\n        },\n        \"data\": [\n            {\n                \"type\": \"sentinel-2-l2a\",\n                \"dataFilter\": {\n                    \"timeRange\": {\n                        \"from\": \"2018-10-11T00:00:00Z\",\n                        \"to\": \"2018-11-18T00:00:00Z\"\n                    }\n                }\n            }\n        ]\n    },\n    \"output\": {\n        \"width\": 512,\n        \"height\": 512,\n        \"responses\": [\n            {\n                \"identifier\": \"default\",\n                \"format\": {\n                    \"type\": \"image/png\"\n                }\n            }\n        ]\n    }\n}",
							"type": "text"
						},
						{
							"key": "evalscript",
							"value": "//VERSION=3\nfunction setup() {\n  return{\n    input: [\"B02\", \"B03\", \"B04\", \"SCL\"],\n    output: {bands: 3}\n  }\n}\n\nfunction evaluatePixel(sample) {\n  if ([8, 9, 10].includes(sample.SCL) ){\n    return [1, 0, 0]\n  } else{\n    return [ 2.5*sample.B04,  2.5*sample.B03,  2.5*sample.B02 ]\n  }\n}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://services.sentinel-hub.com/api/v1/process",
					"protocol": "https",
					"host": [
						"services",
						"sentinel-hub",
						"com"
					],
					"path": [
						"api",
						"v1",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "True color and metadata (multi-part response GeoTIFF and json)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/tar"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "request",
							"value": "{\n    \"input\": {\n        \"bounds\": {\n            \"bbox\": [\n                13.822174072265625,\n                45.85080395917834,\n                14.55963134765625,\n                46.29191774991382\n            ]\n        },\n        \"data\": [\n            {\n                \"type\": \"sentinel-2-l2a\",\n                \"dataFilter\": {\n                    \"timeRange\": {\n                        \"from\": \"2018-12-27T00:00:00Z\",\n                        \"to\": \"2018-12-27T23:59:59Z\"\n                    }\n                }\n            }\n        ]\n    },\n    \"output\": {\n        \"width\": 200,\n        \"height\": 100,\n        \"responses\": [\n            {\n                \"identifier\": \"default\",\n                \"format\": {\n                    \"type\": \"image/png\"\n                }\n            },\n            {\n                \"identifier\": \"userdata\",\n                \"format\": {\n                    \"type\": \"application/json\"\n                }\n            }\n        ]\n    }\n}",
							"type": "text"
						},
						{
							"key": "evalscript",
							"value": "//VERSION=3\n\nfunction setup() {\n  return {\n    input: [\"B02\", \"B03\", \"B04\"],\n    mosaicking: Mosaicking.ORBIT,\n    output: { id:\"default\", bands: 3}\n  }\n}\n\nfunction updateOutputMetadata(scenes, inputMetadata, outputMetadata) {\n    outputMetadata.userData = { \"scenes\":  scenes.orbits }\n}\n\nfunction evaluatePixel(samples) {\n  return [ 2.5*samples[0].B04, 2.5*samples[0].B03, 2.5*samples[0].B02 ]\n}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://services.sentinel-hub.com/api/v1/process",
					"protocol": "https",
					"host": [
						"services",
						"sentinel-hub",
						"com"
					],
					"path": [
						"api",
						"v1",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "NDVI as jpeg image with bounds given as polygon",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "multipart/form-data"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "request",
							"value": "{\n    \"input\": {\n        \"bounds\": {\n            \"properties\": {\n                \"crs\": \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\"\n            },\n            \"geometry\": {\n                \"type\": \"Polygon\",\n                \"coordinates\": [\n                    [\n                        [\n                            -94.04798984527588,\n                            41.7930725281021\n                        ],\n                        [\n                            -94.04803276062012,\n                            41.805773608962869\n                        ],\n                        [\n                            -94.06738758087158,\n                            41.805901566741308\n                        ],\n                        [\n                            -94.06734466552735,\n                            41.7967199475024\n                        ],\n                        [\n                            -94.06223773956299,\n                            41.79144072064381\n                        ],\n                        [\n                            -94.0504789352417,\n                            41.791376727347969\n                        ],\n                        [\n                            -94.05039310455322,\n                            41.7930725281021\n                        ],\n                        [\n                            -94.04798984527588,\n                            41.7930725281021\n                        ]\n                    ]\n                ]\n            }\n        },\n        \"data\": [\n            {\n                \"type\": \"sentinel-2-l2a\",\n                \"dataFilter\": {\n                    \"timeRange\": {\n                        \"from\": \"2018-10-01T00:00:00Z\",\n                        \"to\": \"2018-12-20T00:00:00Z\"\n                    }\n                }\n            }\n        ]\n    },\n    \"output\": {\n        \"width\": 512,\n        \"height\": 512,\n        \"responses\": [\n            {\n                \"identifier\": \"default\",\n                \"format\": {\n                    \"type\": \"image/jpeg\",\n                    \"quality\": 80\n                }\n            }\n        ]\n    }\n}",
							"type": "text"
						},
						{
							"key": "evalscript",
							"value": "//VERSION=3\nfunction setup() {\n  return {\n    input: [{\n      bands:[\"B04\", \"B08\"],\n    }],\n    output: {\n      id: \"default\",\n      bands: 3,\n    }\n  }\n}\n\nfunction evaluatePixel(sample) {\n    let ndvi = (sample.B08 - sample.B04) / (sample.B08 + sample.B04)\n    \n    if (ndvi<-0.5) return [0.05,0.05,0.05]\n    else if (ndvi<-0.2) return [0.75,0.75,0.75]\n    else if (ndvi<-0.1) return [0.86,0.86,0.86]\n    else if (ndvi<0) return [0.92,0.92,0.92]\n    else if (ndvi<0.025) return [1,0.98,0.8]\n    else if (ndvi<0.05) return [0.93,0.91,0.71]\n    else if (ndvi<0.075) return [0.87,0.85,0.61]\n    else if (ndvi<0.1) return [0.8,0.78,0.51]\n    else if (ndvi<0.125) return [0.74,0.72,0.42]\n    else if (ndvi<0.15) return [0.69,0.76,0.38]\n    else if (ndvi<0.175) return [0.64,0.8,0.35]\n    else if (ndvi<0.2) return [0.57,0.75,0.32]\n    else if (ndvi<0.25) return [0.5,0.7,0.28]\n    else if (ndvi<0.3) return [0.44,0.64,0.25]\n    else if (ndvi<0.35) return [0.38,0.59,0.21]\n    else if (ndvi<0.4) return [0.31,0.54,0.18]\n    else if (ndvi<0.45) return [0.25,0.49,0.14]\n    else if (ndvi<0.5) return [0.19,0.43,0.11]\n    else if (ndvi<0.55) return [0.13,0.38,0.07]\n    else if (ndvi<0.6) return [0.06,0.33,0.04]\n    else return [0,0.27,0]\n}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://services.sentinel-hub.com/api/v1/process",
					"protocol": "https",
					"host": [
						"services",
						"sentinel-hub",
						"com"
					],
					"path": [
						"api",
						"v1",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exact NDVI values using a floating point GeoTIFF",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "request",
							"value": "{\n    \"input\": {\n        \"bounds\": {\n            \"properties\": {\n                \"crs\": \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\"\n            },\n            \"geometry\": {\n                \"type\": \"Polygon\",\n                \"coordinates\": [\n                    [\n                        [\n                            -94.04798984527588,\n                            41.7930725281021\n                        ],\n                        [\n                            -94.04803276062012,\n                            41.805773608962869\n                        ],\n                        [\n                            -94.06738758087158,\n                            41.805901566741308\n                        ],\n                        [\n                            -94.06734466552735,\n                            41.7967199475024\n                        ],\n                        [\n                            -94.06223773956299,\n                            41.79144072064381\n                        ],\n                        [\n                            -94.0504789352417,\n                            41.791376727347969\n                        ],\n                        [\n                            -94.05039310455322,\n                            41.7930725281021\n                        ],\n                        [\n                            -94.04798984527588,\n                            41.7930725281021\n                        ]\n                    ]\n                ]\n            }\n        },\n        \"data\": [\n            {\n                \"type\": \"sentinel-2-l2a\",\n                \"dataFilter\": {\n                    \"timeRange\": {\n                        \"from\": \"2018-10-01T00:00:00Z\",\n                        \"to\": \"2018-12-20T00:00:00Z\"\n                    }\n                }\n            }\n        ]\n    },\n    \"output\": {\n        \"width\": 512,\n        \"height\": 512,\n        \"responses\": [\n            {\n                \"identifier\": \"default\",\n                \"format\": {\n                    \"type\": \"image/tiff\"\n                }\n            }\n        ]\n    }\n}",
							"type": "text"
						},
						{
							"key": "evalscript",
							"value": "//VERSION=3\nfunction setup() {\n  return{\n    input: [{\n      bands: [\"B04\", \"B08\"],\n      units: \"DN\"\n    }],\n    output: {\n      id: \"default\",\n      bands: 1,\n      sampleType: SampleType.FLOAT32\n    }\n  }\n}\n\nfunction evaluatePixel(sample) {\n  let ndvi = (sample.B08 - sample.B04) / (sample.B08 + sample.B04)\n  return [ ndvi ]\n}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://services.sentinel-hub.com/api/v1/process",
					"protocol": "https",
					"host": [
						"services",
						"sentinel-hub",
						"com"
					],
					"path": [
						"api",
						"v1",
						"process"
					]
				},
				"description": "Accept: application/tar must be added to header."
			},
			"response": []
		},
		{
			"name": "NDVI image  and  value (multi-part response png and GeoTIFF)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "multipart/form-data"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/tar"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "request",
							"value": "{\n    \"input\": {\n        \"bounds\": {\n            \"properties\": {\n                \"crs\": \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\"\n            },\n            \"geometry\":{\n                \"type\": \"Polygon\",\n                \"coordinates\": [\n                  [\n                    [\n                      -94.04798984527588,\n                      41.7930725281021\n                    ],\n                    [\n                      -94.04803276062012,\n                      41.805773608962866\n                    ],\n                    [\n                      -94.06738758087158,\n                      41.805901566741305\n                    ],\n                    [\n                      -94.06734466552734,\n                      41.7967199475024\n                    ],\n                    [\n                      -94.06223773956299,\n                      41.79144072064381\n                    ],\n                    [\n                      -94.0504789352417,\n                      41.791376727347966\n                    ],\n                    [\n                      -94.05039310455322,\n                      41.7930725281021\n                    ],\n                    [\n                      -94.04798984527588,\n                      41.7930725281021\n                    ]\n                  ]\n                ]\n              }\n        },\n        \"data\": [\n            {\n                \"type\": \"sentinel-2-l2a\",\n                \"dataFilter\": {\n                    \"timeRange\": {\n                        \"from\": \"2018-10-01T00:00:00Z\",\n                        \"to\": \"2018-12-20T00:00:00Z\"\n                    }\n                }\n            }\n        ]\n    },\n    \"output\": {\n    \"width\": 512,\n    \"height\": 512,\n    \"responses\": [\n      {\n        \"identifier\": \"ndvi_image\",\n        \"format\": {\n          \"type\": \"image/png\"\n        }\n      },\n     {\n        \"identifier\": \"default\",\n        \"format\": {\n          \"type\": \"image/tiff\"\n        }\n\t }\n    ]\n  }\n}\n",
							"type": "text"
						},
						{
							"key": "evalscript",
							"value": "//VERSION=3\nfunction setup( ){\n  return{\n\n    input: [{\n      bands:[\"B04\", \"B08\"],\n    }],\n    output: [{\n      id: \"default\",\n      bands: 1,\n      sampleType: SampleType.FLOAT32},\n    {\n      id: \"ndvi_image\",\n      bands: 3,\n      sampleType: SampleType.AUTO}\n    ]\n  }\n}\n\n\nfunction evaluatePixel(sample) {\n    let ndvi = (sample.B08 - sample.B04) / (sample.B08 + sample.B04)\n\n    if (ndvi<-0.5) image = [0.05,0.05,0.05]\n    else if (ndvi<-0.2) image = [0.75,0.75,0.75]\n    else if (ndvi<-0.1) image = [0.86,0.86,0.86]\n    else if (ndvi<0) image = [0.92,0.92,0.92]\n    else if (ndvi<0.025) image = [1,0.98,0.8]\n    else if (ndvi<0.05) image = [0.93,0.91,0.71]\n    else if (ndvi<0.075) image = [0.87,0.85,0.61]\n    else if (ndvi<0.1) image = [0.8,0.78,0.51]\n    else if (ndvi<0.125) image = [0.74,0.72,0.42]\n    else if (ndvi<0.15) image = [0.69,0.76,0.38]\n    else if (ndvi<0.175) image = [0.64,0.8,0.35]\n    else if (ndvi<0.2) image = [0.57,0.75,0.32]\n    else if (ndvi<0.25) image = [0.5,0.7,0.28]\n    else if (ndvi<0.3) image = [0.44,0.64,0.25]\n    else if (ndvi<0.35) image = [0.38,0.59,0.21]\n    else if (ndvi<0.4) image = [0.31,0.54,0.18]\n    else if (ndvi<0.45) image = [0.25,0.49,0.14]\n    else if (ndvi<0.5) image = [0.19,0.43,0.11]\n    else if (ndvi<0.55) image = [0.13,0.38,0.07]\n    else if (ndvi<0.6) image = [0.06,0.33,0.04]\n    else  image = [0,0.27,0]\n\n    return {\n      default: [ ndvi ],\n      ndvi_image: image\n  }\n}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://services.sentinel-hub.com/api/v1/process",
					"protocol": "https",
					"host": [
						"services",
						"sentinel-hub",
						"com"
					],
					"path": [
						"api",
						"v1",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "All S2L2A raw bands, original data (no normalization)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "request",
							"value": "{\n    \"input\": {\n        \"bounds\": {\n            \"properties\": {\n                \"crs\": \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\"\n            },\n            \"geometry\": {\n                \"type\": \"Polygon\",\n                \"coordinates\": [\n                    [\n                        [\n                            -94.04798984527588,\n                            41.7930725281021\n                        ],\n                        [\n                            -94.04803276062012,\n                            41.805773608962869\n                        ],\n                        [\n                            -94.06738758087158,\n                            41.805901566741308\n                        ],\n                        [\n                            -94.06734466552735,\n                            41.7967199475024\n                        ],\n                        [\n                            -94.06223773956299,\n                            41.79144072064381\n                        ],\n                        [\n                            -94.0504789352417,\n                            41.791376727347969\n                        ],\n                        [\n                            -94.05039310455322,\n                            41.7930725281021\n                        ],\n                        [\n                            -94.04798984527588,\n                            41.7930725281021\n                        ]\n                    ]\n                ]\n            }\n        },\n        \"data\": [\n            {\n                \"type\": \"sentinel-2-l2a\",\n                \"dataFilter\": {\n                    \"timeRange\": {\n                        \"from\": \"2018-10-01T00:00:00Z\",\n                        \"to\": \"2018-12-20T00:00:00Z\"\n                    }\n                }\n            }\n        ]\n    },\n    \"output\": {\n        \"width\": 512,\n        \"height\": 512,\n        \"responses\": [\n            {\n                \"identifier\": \"default\",\n                \"format\": {\n                    \"type\": \"image/tiff\"\n                }\n            }\n        ]\n    }\n}",
							"type": "text"
						},
						{
							"key": "evalscript",
							"value": "//VERSION=3\nfunction setup() {\n  return {\n    input: [{\n      bands: [\"B01\", \"B02\", \"B03\", \"B04\", \"B05\", \"B06\", \"B07\", \"B08\", \"B8A\", \"B09\", \"B11\", \"B12\"],\n      units: \"DN\"\n    }],\n    output: {\n      id: \"default\",\n      bands: 12,\n      sampleType: SampleType.UINT16\n    }\n  }\n}\n\nfunction evaluatePixel(sample) {\n    return [ sample.B01, sample.B02, sample.B03, sample.B04, sample.B05, sample.B06, sample.B07, sample.B08, sample.B8A, sample.B09, sample.B11, sample.B12]\n}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://services.sentinel-hub.com/api/v1/process",
					"protocol": "https",
					"host": [
						"services",
						"sentinel-hub",
						"com"
					],
					"path": [
						"api",
						"v1",
						"process"
					]
				},
				"description": "Accept: application/tar must be added to header."
			},
			"response": []
		},
		{
			"name": "Other S2L2A specific data (Aerosol Optical Thickness, Scene Classification, Snow and Cloud probabilities, Sun and View angles)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "multipart/form-data"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/tar"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "request",
							"value": "{\n    \"input\": {\n        \"bounds\": {\n            \"properties\": {\n                \"crs\": \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\"\n            },\n            \"bbox\": [\n                13.822174072265625,\n                45.85080395917834,\n                14.55963134765625,\n                46.29191774991382\n            ]\n        },\n        \"data\": [\n            {\n                \"type\": \"sentinel-2-l2a\",\n                \"dataFilter\": {\n                    \"timeRange\": {\n                        \"from\": \"2019-02-01T00:00:00Z\",\n                        \"to\": \"2019-03-22T00:00:00Z\"\n                    }\n                }\n            }\n        ]\n    },\n    \"output\": {\n        \"width\": 512,\n        \"height\": 512,\n        \"responses\": [\n            {\n                \"identifier\": \"TrueColor\",\n                \"format\": {\n                    \"type\": \"image/tiff\"\n                }\n            },\n            {\n                \"identifier\": \"AOT\",\n                \"format\": {\n                    \"type\": \"image/tiff\"\n                }\n            },\n            {\n                \"identifier\": \"SCL\",\n                \"format\": {\n                    \"type\": \"image/tiff\"\n                }\n            },\n            {\n                \"identifier\": \"SNW\",\n                \"format\": {\n                    \"type\": \"image/tiff\"\n                }\n            },\n            {\n                \"identifier\": \"CLD\",\n                \"format\": {\n                    \"type\": \"image/tiff\"\n                }\n            },\n            {\n                \"identifier\": \"SAA\",\n                \"format\": {\n                    \"type\": \"image/tiff\"\n                }\n            },\n            {\n                \"identifier\": \"SZA\",\n                \"format\": {\n                    \"type\": \"image/tiff\"\n                }\n            },\n            {\n                \"identifier\": \"VAM\",\n                \"format\": {\n                    \"type\": \"image/tiff\"\n                }\n            },\n            {\n                \"identifier\": \"VZM\",\n                \"format\": {\n                    \"type\": \"image/tiff\"\n                }\n            }\n        ]\n    }\n}",
							"type": "text"
						},
						{
							"key": "evalscript",
							"value": "//VERSION=3\nfunction setup() {\n  return{\n    input: [{bands:[\"B02\", \"B03\", \"B04\", \"AOT\", \"SCL\", \"SNW\", \"CLD\", \"sunAzimuthAngles\", \"sunZenithAngles\", \"viewAzimuthMean\", \"viewZenithMean\"], units:\"DN\"}],\n    output: [\n        {id: \"TrueColor\", bands: 3, sampleType: SampleType.FLOAT32},\n        {id: \"AOT\", bands: 1, sampleType: SampleType.FLOAT32},\n        {id: \"SCL\", bands: 1, sampleType: SampleType.FLOAT32},\n        {id: \"SNW\", bands: 1, sampleType: SampleType.FLOAT32},\n        {id: \"CLD\", bands: 1, sampleType: SampleType.FLOAT32},\n        {id: \"SAA\", bands: 1, sampleType: SampleType.FLOAT32},\n        {id: \"SZA\", bands: 1, sampleType: SampleType.FLOAT32},\n        {id: \"VAM\", bands: 1, sampleType: SampleType.FLOAT32},\n        {id: \"VZM\", bands: 1, sampleType: SampleType.FLOAT32}\n    ]\n  }\n}\n\nfunction evaluatePixel(sample) {\n    var truecolor = [sample.B04, sample.B03, sample.B02]\n    var aot = [sample.AOT]\n    var scl = [sample.SCL]\n    var snw = [sample.SNW]\n    var cld = [sample.CLD]\n    var saa = [sample.sunAzimuthAngles]\n    var sza = [sample.sunZenithAngles]\n    var vam = [sample.viewAzimuthMean]\n    var vzm = [sample.viewZenithMean]\n\n    return {\n        TrueColor: truecolor, \n        AOT: aot,\n        SCL: scl,\n        SNW: snw,\n        CLD: cld,\n        SAA: saa,\n        SZA: sza,\n        VAM: vam,\n        VZM: vzm\n    }\n    \n}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://services.sentinel-hub.com/api/v1/process",
					"protocol": "https",
					"host": [
						"services",
						"sentinel-hub",
						"com"
					],
					"path": [
						"api",
						"v1",
						"process"
					]
				}
			},
			"response": []
		},
		{
			"name": "True_Color_multi_part_response_different_formats_and_sampeTypes",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer <your access token>"
					},
					{
						"key": "Content-Type",
						"value": "multipart/form-data"
					},
					{
						"key": "Accept",
						"value": "application/tar"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "request",
							"value": "{\r\n    \"input\": {\r\n        \"bounds\": {\r\n            \"properties\": {\r\n                \"crs\": \"http://www.opengis.net/def/crs/OGC/1.3/CRS84\"\r\n            },\r\n            \"bbox\": [\r\n                12.206251,\r\n                41.627351,\r\n                12.594042,\r\n                41.856879\r\n            ]\r\n        },\r\n        \"data\": [\r\n            {\r\n                \"type\": \"sentinel-2-l2a\",\r\n                \"dataFilter\": {\r\n                    \"timeRange\": {\r\n                        \"from\": \"2018-06-01T00:00:00Z\",\r\n                        \"to\": \"2018-08-31T00:00:00Z\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    \"output\": {\r\n    \"width\": 512,\r\n    \"height\": 512,\r\n    \"responses\": [\r\n      {\r\n        \"identifier\": \"default\",\r\n        \"format\": {\r\n          \"type\": \"image/jpeg\"\r\n        }\r\n      },\r\n     {\r\n        \"identifier\": \"true_color_8bit\",\r\n        \"format\": {\r\n          \"type\": \"image/png\"\r\n        }\r\n\t },\r\n {\r\n        \"identifier\": \"true_color_16bit\",\r\n        \"format\": {\r\n          \"type\": \"image/tiff\"\r\n        }\r\n\t },\r\n{\r\n        \"identifier\": \"true_color_32float\",\r\n        \"format\": {\r\n          \"type\": \"image/tiff\"\r\n        }\r\n\t }\r\n    ]\r\n  }\r\n}",
							"type": "text"
						},
						{
							"key": "evalscript",
							"value": "//VERSION=3\r\n  function setup( ){\r\n  return{\r\n    input: [{\r\n      bands:[\"B04\", \"B03\", \"B02\"],\r\n\t  units: \"Reflectance\" // Default units. Reflectance values = DN/ 10,000\r\n    }],\r\n    output: [{\r\n      id: \"default\",\r\n      bands: 3,\r\n      sampleType: \"AUTO\" // default  - scales the output values from input values [0,1] to [0,255].\r\n\t  },\r\n    {\r\n      id: \"true_color_8bit\",\r\n      bands: 3,\r\n      sampleType: \"UINT8\"},\r\n     {\r\n      id: \"true_color_16bit\",\r\n      bands: 3,\r\n      sampleType: \"UINT16\"},\r\n     {\r\n      id: \"true_color_32float\",\r\n      bands: 3,\r\n      sampleType: \"FLOAT32\"}\r\n    ]\r\n  }\r\n}\r\nfunction evaluatePixel(sample) {\r\n \r\n    return {\r\n\t  //  output band values are scaled from [0,1] to [0,255]. Multiply by 2.5 to increase brightness\r\n      default: [2.5*sample.B04, 2.5*sample.B03,  2.5*sample.B02],\r\n\t  \r\n\t // Multiply input reflectance values by 255 to return the band values clamped to [0 , 255] unsigned 8 bit range.  \r\n\t  true_color_8bit: [2.5 *sample.B04  *255,  2.5 * sample.B03 *255,  2.5 *sample.B02 *255],\r\n\t  \r\n\t  // Multiply input reflectance values  by 65535 to return the band values clamped to [0 ,65535] unsigned 16 bit range.  \r\n      true_color_16bit: [2.5 * sample.B04 *65535,  2.5 * sample.B03 *65535,  2.5 * sample.B02 *65535], \r\n      \r\n\t  // To save processing units multiply by 10000 to return integers . To obtain reflectance values, simply divide the resulting pixel values by 10000.\r\n\t  true_color_32float: [ sample.B04 *10000, sample.B03 *10000, sample.B02 *10000], \r\n  }\r\n}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://services.sentinel-hub.com/api/v1/process",
					"protocol": "https",
					"host": [
						"services",
						"sentinel-hub",
						"com"
					],
					"path": [
						"api",
						"v1",
						"process"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessToken",
				"value": "{{access_token}}",
				"type": "string"
			},
			{
				"key": "tokenType",
				"type": "any"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}